---
layout: post
title:  Mysql5.7 on duplicate update 引起的死锁
date:   2019-10-9 14:32:00
categories:  iptable,端口
---
# 1.背景
用户选新书的时候，会将学习过的书中的单词导入，有的用户会导入三，四千个数据，由于数据量大，导致了耗时太长。在[kafka分而治之解决一个耗时异步接口问题](http://quietlistener.github.io/kafka/2019/07/01/kafka%E5%88%86%E8%80%8C%E6%B2%BB%E4%B9%8B%E8%A7%A3%E5%86%B3%E4%B8%80%E4%B8%AA%E8%80%97%E6%97%B6%E5%BC%82%E6%AD%A5%E6%8E%A5%E5%8F%A3%E9%97%AE%E9%A2%98.html) 中将数据拆分为100个一批这样并发操作，加快速度。

但是最近老有用户报，同步记录不够，一看log发现很多死锁

```sql
2019-10-09 12:51:18 2b2434e17700
*** (1) TRANSACTION:
TRANSACTION 56202138678, ACTIVE 0.144 sec inserting
mysql tables in use 1, locked 1
LOCK WAIT 4 lock struct(s), heap size 1184, 2 row lock(s), undo log entries 33
LOCK BLOCKING MySQL thread id: 45916 block 47063
MySQL thread id 47063, OS thread handle 0x2b23116ca700, query id 127644129294 10.1.3.116 userword update
insert into user_done_word_v2_t1233  (id,user_id, book_id, word_topic_id, first_at, score, wrong_times, done_times, total_used_time, created_at, updated_at, del)  values (NULL,61683723,24,19530,1569991878,-1, 0, 4, 3600, '2019-10-02 12:51:18.281', '2019-10-02 12:51:18.281',false)  on duplicate key update score = -1, wrong_times = 0, done_times = 4, total_used_time = 3600, updated_at = '2019-10-02 12:51:18.281'
*** (1) WAITING FOR THIS LOCK TO BE GRANTED:
RECORD LOCKS space id 147 page no 226120 n bits 792 index `uniq_uid_bid_wid` of table `users_words`.`user_done_word_v2_t1233` trx id 56202138678 lock_mode X waiting
Record lock, heap no 650 PHYSICAL RECORD: n_fields 4; compact format; info bits 0
 0: len 4; hex 83ad380b; asc   8 ;;
 1: len 4; hex 80000018; asc     ;;
 2: len 4; hex 80004d00; asc   M ;;
 3: len 4; hex 82fdf2df; asc     ;;

*** (2) TRANSACTION:
TRANSACTION 56202138682, ACTIVE 0.136 sec inserting
mysql tables in use 1, locked 1
3 lock struct(s), heap size 1184, 2 row lock(s), undo log entries 83
MySQL thread id 45916, OS thread handle 0x2b2434e17700, query id 127644132653 10.1.7.176 userword update
insert into user_done_word_v2_t1233  (id,user_id, book_id, word_topic_id, first_at, score, wrong_times, done_times, total_used_time, created_at, updated_at, del)  values (NULL,61683723,24,19683,1569991878,-1, 0, 4, 34824, '2019-10-02 12:51:18.287', '2019-10-02 12:51:18.287',false)  on duplicate key update score = -1, wrong_times = 0, done_times = 4, total_used_time = 34824, updated_at = '2019-10-02 12:51:18.287'
*** (2) HOLDS THE LOCK(S):
RECORD LOCKS space id 147 page no 226120 n bits 792 index `uniq_uid_bid_wid` of table `users_words`.`user_done_word_v2_t1233` trx id 56202138682 lock_mode X locks rec but not gap
Record lock, heap no 650 PHYSICAL RECORD: n_fields 4; compact format; info bits 0
 0: len 4; hex 83ad380b; asc   8 ;;
 1: len 4; hex 80000018; asc     ;;
 2: len 4; hex 80004d00; asc   M ;;
 3: len 4; hex 82fdf2df; asc     ;;

*** (2) WAITING FOR THIS LOCK TO BE GRANTED:
RECORD LOCKS space id 147 page no 226120 n bits 792 index `uniq_uid_bid_wid` of table `users_words`.`user_done_word_v2_t1233` trx id 56202138682 lock_mode X locks gap before rec insert intention waiting
Record lock, heap no 650 PHYSICAL RECORD: n_fields 4; compact format; info bits 0
 0: len 4; hex 83ad380b; asc   8 ;;
 1: len 4; hex 80000018; asc     ;;
 2: len 4; hex 80004d00; asc   M ;;
 3: len 4; hex 82fdf2df; asc     ;;

*** WE ROLL BACK TRANSACTION (1)
```

都是 insert ... on duplicate key 导致的。
**mysql是版本是5.7,隔离级别是Repeatable Read**

# 2.解决
先看了一下是插入意向锁，等待GAP锁导致的死锁。google搜了一下，发现mysql5.7 执行 insert ... on duplicate key 会有这个死锁问题。

### 解决办法
1. insert ... on duplicate key 拆成 insert igonre ...  和 update 两步来执行。
 
2. 1. insert ignore 返回 1，不执行任何操作
   2. insert ignore 返回 0，说明已经有相同记录，执行update 
   
3. 并将transaction缩小(将一些操作溢出到transaction以外)。解决了这个问题

# 3. 总结
   在高并发的情况下 
   1. 事务范围应该尽量的小，耗时的操作尽量移除到事务以外
   2. 批量插入操作尽量按key排序，降低争用gap锁的风险
   3. 在有unique key 和 key的表上慎重使用 insert ... on duplicate key

# 4. 参考资料：
[一条Insert on duplicate引发的血案](https://zhuanlan.zhihu.com/p/29349080)